- name: Installer apache2 et mysql-server
  hosts: webserversapache
  tasks:
    - name: Setup webserversapache
      when: inventory_hostname in groups['webserverapache']
      block:

        - name: Define webserver packages
          ansible.builtin.set_fact:
            ws_packages: ['apache2', 'mysql-server']

        - name: Install webserverapache packages
          ansible.builtin.apt:
            name: "{{ item }}"
            state: present
            update_cache: true
          become: true
          loop: "{{ ws_packages }}"

- name: Installer git nginx et cowsay
  hosts: webserversnginx
  tasks:
    - name: Setup webserversnginx
      when: inventory_hostname in groups['webservernginx']
      block:

        - name: Define webservernginx packages
          ansible.builtin.set_fact:
            ws_packages: ['git', 'nginx', 'cowsay']

        - name: Install webservernginx packages
          ansible.builtin.apt:
            name: "{{ item }}"
            state: present
            update_cache: true
          become: true
          loop: "{{ ws_packages }}"

- name: Installer ufw uniquement sur Ubuntu
  hosts: all
  become: yes
  tasks:
    - name: Installer ufw sur Ubuntu
      ansible.builtin.apt:
        name: ufw
        state: present
        update_cache: yes
      when: ansible_facts['os_family'] == "Debian" and ansible_facts['distribution'] == "Ubuntu"

- name: Modifier la page HTML si apache2 ou nginx est installé et démarrer le service
  hosts: all
  become: yes
  tasks:

    - name: Collecter les paquets installés
      ansible.builtin.package_facts:

    - name: Définir le service web installé en utilisant le template web_service_check.j2
      set_fact:
        web_service: "{{ lookup('template', 'web_service_check.j2') | trim }}"

    - name: Copier le template index.html si apache2 ou nginx est installé
      ansible.builtin.template:
        src: index.html.j2
        dest: "{{ (web_service == 'apache2') | ternary('/var/www/html/index.html', '/usr/share/nginx/html/index.html') }}"
        owner: "{{ (web_service == 'apache2') | ternary('www-data', 'nginx') }}"
        group: "{{ (web_service == 'apache2') | ternary('www-data', 'nginx') }}"
        mode: '0644'
      when: web_service != 'none'

    - name: Démarrer et activer le service web (apache2 ou nginx)
      ansible.builtin.service:
        name: "{{ web_service }}"
        state: started
        enabled: yes
      when: web_service != 'none'

