---
- name: Traitement du CSV température
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars/main.yml

  tasks:
    - name: Récupérer l'heure actuelle du système en GMT
      ansible.builtin.set_fact:
        current_hour_gmt: "{{ lookup('pipe', 'date -u +%H') }}"

    - name: Lire et traiter le fichier CSV
      ansible.builtin.set_fact:
        csv_processed: "{{ lookup('template', 'templates/splitsortuniqcsv.j2') | from_yaml }}"

    - name: Récupérer la température actuelle depuis l'API Open-Meteo
      ansible.builtin.uri:
        url: "{{ api_url }}"
        return_content: true
      register: api_response

    - name: Extraire la température actuelle de l'API
      ansible.builtin.set_fact:
        current_temperature: "{{ (api_response.json.hourly.temperature_2m | first) | round(1) | float }}"

    - name: Trouver la température correspondante dans le CSV
      ansible.builtin.set_fact:
        corresponding_csv_temperature: "{{ lookup('template', 'templates/findtemp.j2') | float }}"

    - name: Afficher les températures et la comparaison
      ansible.builtin.debug:
        msg: "{{ lookup('template', 'templates/difftemp.j2') }}"
