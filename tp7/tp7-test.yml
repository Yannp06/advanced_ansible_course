---
- name: Traitement du CSV température
  hosts: localhost
  gather_facts: no
  vars:
    csv_file: "./temperature.csv"
    api_url: "https://api.open-meteo.com/v1/forecast?latitude=48.86&longitude=2.33&hourly=temperature_2m&timezone=GMT"

  tasks:
    - name: Récupérer l'heure actuelle du système en GMT
      ansible.builtin.command: date -u +%H
      register: current_hour_gmt

    - name: Lire et traiter le fichier CSV
      ansible.builtin.set_fact:
        csv_processed: |
          {%- set lines = lookup('file', csv_file).splitlines() -%}
          {%- set result = [] -%}
          {%- for line in lines[1:] if line | trim != '' -%}
            {%- set parts = line.split(',') | map('trim') | list -%}
            {%- if parts | length == 2 -%}
              {%- set _ = result.append({'time': parts[0], 'temperature': parts[1]}) -%}
            {%- endif -%}
          {%- endfor -%}
          {{ result | unique | sort(attribute='time') }}

    - name: Récupérer la température actuelle depuis l'API Open-Meteo
      ansible.builtin.uri:
        url: "{{ api_url }}"
        return_content: yes
      register: api_response

    - name: Extraire la température actuelle de l'API
      ansible.builtin.set_fact:
        current_temperature: "{{ (api_response.json.hourly.temperature_2m | first) | round(1) | float }}"

    - name: Trouver la température correspondante dans le CSV
      ansible.builtin.set_fact:
        corresponding_csv_temperature: |
          {%- for item in csv_processed -%}
            {%- if item.time | regex_replace(':.*', '') == current_hour_gmt.stdout -%}
              {{ item.temperature | float }}
            {%- endif -%}
          {%- endfor -%}

    - name: Afficher les températures et la comparaison
      ansible.builtin.debug:
        msg: |
          Heure actuelle du système en GMT: {{ current_hour_gmt.stdout }}h
          Température actuelle de l'API: {{ current_temperature }}°C
          {%- if corresponding_csv_temperature | default(false) -%}
            Température du CSV à {{ current_hour_gmt.stdout }}h: {{ corresponding_csv_temperature }}°C
            {%- if current_temperature > corresponding_csv_temperature -%}
              Il fait plus chaud actuellement que dans les données du CSV.
            {%- elif current_temperature < corresponding_csv_temperature -%}
              Il fait plus froid actuellement que dans les données du CSV.
            {%- else -%}
              La température actuelle est la même que dans les données du CSV.
            {%- endif -%}
          {%- else -%}
            Aucune température correspondante trouvée dans le CSV pour cette heure.
          {%- endif -%}

